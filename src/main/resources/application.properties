#访问相关配置
server.port=8080
server.tomcat.uri-encoding=UTF-8
#项目访问名称，如果不配置直接访问bean就可以
#server.servlet.context-path=/springBoot_demo
#logging.level.mapper的路径=异常级别
logging.level.com.tt.work.starter.impoetfile.dao=DEBUG

mybatis.mapperLocations=classpath:mapper/*.xml
#数据库配置（我自己的，这个大家自己配置）
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/tt
spring.datasource.username=root
spring.datasource.password=root

#数据库连接池配置
#初始化链接数
spring.datasource.initialSize=5  
#最小的空闲连接数
spring.datasource.minIdle=5
#最大的空闲连接数
spring.datasource.maxIdle=20
#最大活动连接数
spring.datasource.maxActive=20
#从池中取连接的最大等待时间，单位ms.
spring.datasource.maxWait=60000
#每XXms运行一次空闲连接回收器
spring.datasource.timeBetweenEvictionRunsMillis=60000  
#池中的连接空闲XX毫秒后被回收
spring.datasource.minEvictableIdleTimeMillis=300000  
#验证使用的SQL语句
spring.datasource.validationQuery=SELECT 1 FROM DUAL  
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
spring.datasource.testWhileIdle=true  
#借出连接时不要测试，否则很影响性能
spring.datasource.testOnBorrow=false  
#归还连接时执行validationQuery检测连接是否有效，
做了这个配置会降低性能
spring.datasource.testOnReturn=false  
#是否缓存preparedStatement，也就是PSCache。
PSCache对支持游标的数据库性能提升巨大，比如说oracle。
在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。
5.5及以上版本有PSCache，建议开启。
spring.datasource.poolPreparedStatements=true  
#属性类型是字符串，通过别名的方式配置扩展插件，
常用的插件有：
监控统计用的filter:stat 
日志用的filter:log4j
防御sql注入的filter:wall
spring.datasource.filters=stat,wall,log4j  
#数据池连接参数
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  
#Spring boot视图配置
spring.mvc.view.prefix=/WEB-INF/
spring.mvc.view.suffix=.jsp
#静态文件访问配置
spring.mvc.static-path-pattern=/static/**